apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: producer
  namespace: kafka
  labels:
    app: producer
spec:
  selector:
    matchLabels:
      app: producer
      monitor-patient-data: "true"
  template:
    metadata:
      labels:
        app: producer
        monitor-patient-data: "true"
    spec:
      nodeSelector:
        monitor-patient-data: "true"
      containers:
      - name: producer
        image: reh69113/masterthesis:producer
        imagePullPolicy: Always
        env:
        - name: SERVER
          value: "kafka-0.kafka.kafka.svc.cluster.local:9092,kafka-1.kafka.kafka.svc.cluster.local:9092,kafka-2.kafka.kafka.svc.cluster.local:9092,kafka-3.kafka.kafka.svc.cluster.local:9092,kafka-4.kafka.kafka.svc.cluster.local:9092,kafka-5.kafka.kafka.svc.cluster.local:9092,kafka-6.kafka.kafka.svc.cluster.local:9092"
        - name: TOPIC
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODENAME
          value: "server"
        - name: PROD
          value: "true"
        - name: CHECKEVERYTHING
          value: "true"
        - name: DURATION
          value: "20"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
        volumeMounts:
          - name: data
            mountPath: /app/data
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          hostPath:
            path: /tmp/data