[2020-10-26 23:12:57,644] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2020-10-26 23:12:58,214] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2020-10-26 23:12:58,265] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2020-10-26 23:12:58,270] INFO starting (kafka.server.KafkaServer)
[2020-10-26 23:12:58,271] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
[2020-10-26 23:12:58,295] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:12:58,311] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,314] INFO Client environment:host.name=kafka-4.kafka.kafka.svc.cluster.local (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,315] INFO Client environment:java.version=11.0.7 (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,315] INFO Client environment:java.vendor=AdoptOpenJDK (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,315] INFO Client environment:java.home=/opt/java/openjdk (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,315] INFO Client environment:java.class.path=/opt/kafka/libs/extensions/*:/opt/kafka/libs/activation-1.1.1.jar:/opt/kafka/libs/aopalliance-repackaged-2.5.0.jar:/opt/kafka/libs/argparse4j-0.7.0.jar:/opt/kafka/libs/audience-annotations-0.5.0.jar:/opt/kafka/libs/commons-cli-1.4.jar:/opt/kafka/libs/commons-lang3-3.8.1.jar:/opt/kafka/libs/connect-api-2.5.0.jar:/opt/kafka/libs/connect-basic-auth-extension-2.5.0.jar:/opt/kafka/libs/connect-file-2.5.0.jar:/opt/kafka/libs/connect-json-2.5.0.jar:/opt/kafka/libs/connect-mirror-2.5.0.jar:/opt/kafka/libs/connect-mirror-client-2.5.0.jar:/opt/kafka/libs/connect-runtime-2.5.0.jar:/opt/kafka/libs/connect-transforms-2.5.0.jar:/opt/kafka/libs/hk2-api-2.5.0.jar:/opt/kafka/libs/hk2-locator-2.5.0.jar:/opt/kafka/libs/hk2-utils-2.5.0.jar:/opt/kafka/libs/jackson-annotations-2.10.2.jar:/opt/kafka/libs/jackson-core-2.10.2.jar:/opt/kafka/libs/jackson-databind-2.10.2.jar:/opt/kafka/libs/jackson-dataformat-csv-2.10.2.jar:/opt/kafka/libs/jackson-datatype-jdk8-2.10.2.jar:/opt/kafka/libs/jackson-jaxrs-base-2.10.2.jar:/opt/kafka/libs/jackson-jaxrs-json-provider-2.10.2.jar:/opt/kafka/libs/jackson-module-jaxb-annotations-2.10.2.jar:/opt/kafka/libs/jackson-module-paranamer-2.10.2.jar:/opt/kafka/libs/jackson-module-scala_2.12-2.10.2.jar:/opt/kafka/libs/jakarta.activation-api-1.2.1.jar:/opt/kafka/libs/jakarta.annotation-api-1.3.4.jar:/opt/kafka/libs/jakarta.inject-2.5.0.jar:/opt/kafka/libs/jakarta.ws.rs-api-2.1.5.jar:/opt/kafka/libs/jakarta.xml.bind-api-2.3.2.jar:/opt/kafka/libs/javassist-3.22.0-CR2.jar:/opt/kafka/libs/javassist-3.26.0-GA.jar:/opt/kafka/libs/javax.servlet-api-3.1.0.jar:/opt/kafka/libs/javax.ws.rs-api-2.1.1.jar:/opt/kafka/libs/jaxb-api-2.3.0.jar:/opt/kafka/libs/jersey-client-2.28.jar:/opt/kafka/libs/jersey-common-2.28.jar:/opt/kafka/libs/jersey-container-servlet-2.28.jar:/opt/kafka/libs/jersey-container-servlet-core-2.28.jar:/opt/kafka/libs/jersey-hk2-2.28.jar:/opt/kafka/libs/jersey-media-jaxb-2.28.jar:/opt/kafka/libs/jersey-server-2.28.jar:/opt/kafka/libs/jetty-client-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-continuation-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-http-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-io-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-security-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-server-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-servlet-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-servlets-9.4.24.v20191120.jar:/opt/kafka/libs/jetty-util-9.4.24.v20191120.jar:/opt/kafka/libs/jopt-simple-5.0.4.jar:/opt/kafka/libs/kafka-clients-2.5.0.jar:/opt/kafka/libs/kafka-log4j-appender-2.5.0.jar:/opt/kafka/libs/kafka-streams-2.5.0.jar:/opt/kafka/libs/kafka-streams-examples-2.5.0.jar:/opt/kafka/libs/kafka-streams-scala_2.12-2.5.0.jar:/opt/kafka/libs/kafka-streams-test-utils-2.5.0.jar:/opt/kafka/libs/kafka-tools-2.5.0.jar:/opt/kafka/libs/kafka_2.12-2.5.0-javadoc.jar:/opt/kafka/libs/kafka_2.12-2.5.0-scaladoc.jar:/opt/kafka/libs/kafka_2.12-2.5.0-sources.jar:/opt/kafka/libs/kafka_2.12-2.5.0-test-sources.jar:/opt/kafka/libs/kafka_2.12-2.5.0-test.jar:/opt/kafka/libs/kafka_2.12-2.5.0.jar:/opt/kafka/libs/log4j-1.2.17.jar:/opt/kafka/libs/lz4-java-1.7.1.jar:/opt/kafka/libs/maven-artifact-3.6.3.jar:/opt/kafka/libs/metrics-core-2.2.0.jar:/opt/kafka/libs/netty-buffer-4.1.45.Final.jar:/opt/kafka/libs/netty-codec-4.1.45.Final.jar:/opt/kafka/libs/netty-common-4.1.45.Final.jar:/opt/kafka/libs/netty-handler-4.1.45.Final.jar:/opt/kafka/libs/netty-resolver-4.1.45.Final.jar:/opt/kafka/libs/netty-transport-4.1.45.Final.jar:/opt/kafka/libs/netty-transport-native-epoll-4.1.45.Final.jar:/opt/kafka/libs/netty-transport-native-unix-common-4.1.45.Final.jar:/opt/kafka/libs/osgi-resource-locator-1.0.1.jar:/opt/kafka/libs/paranamer-2.8.jar:/opt/kafka/libs/plexus-utils-3.2.1.jar:/opt/kafka/libs/reflections-0.9.12.jar:/opt/kafka/libs/rocksdbjni-5.18.3.jar:/opt/kafka/libs/scala-java8-compat_2.12-0.9.0.jar:/opt/kafka/libs/scala-collection-compat_2.12-2.1.3.jar:/opt/kafka/libs/scala-library-2.12.10.jar:/opt/kafka/libs/scala-logging_2.12-3.9.2.jar:/opt/kafka/libs/scala-reflect-2.12.10.jar:/opt/kafka/libs/slf4j-api-1.7.30.jar:/opt/kafka/libs/slf4j-log4j12-1.7.30.jar:/opt/kafka/libs/snappy-java-1.1.7.3.jar:/opt/kafka/libs/validation-api-2.0.1.Final.jar:/opt/kafka/libs/zookeeper-3.5.7.jar:/opt/kafka/libs/zookeeper-jute-3.5.7.jar:/opt/kafka/libs/zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.version=4.14.193-149.317.amzn2.x86_64 (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:user.name=nonroot (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:user.home=/home/nonroot (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:user.dir=/opt/kafka (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.memory.free=983MB (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,316] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,319] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=5000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@a4add54 (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:12:58,324] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2020-10-26 23:12:58,329] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:12:58,331] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:12:58,399] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:12:58,422] INFO Socket connection established, initiating session, client: /10.233.113.3:33174, server: zookeeper/10.233.2.139:2181 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:12:58,474] INFO Session establishment complete on server zookeeper/10.233.2.139:2181, sessionid = 0x300001e78c80003, negotiated timeout = 3000 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:12:58,479] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:12:59,310] INFO Cluster ID = NnUC7vbTTYmufqdcPdWqMg (kafka.server.KafkaServer)
[2020-10-26 23:12:59,315] WARN No meta.properties file under dir /var/lib/kafka/data/topics/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2020-10-26 23:12:59,398] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = PLAINTEXT://:9092,OUTSIDE://10.0.2.250:32404
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 5000
	create.topic.policy.class.name = null
	default.replication.factor = 3
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 2000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 0
	host.name = 
	inter.broker.listener.name = PLAINTEXT
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,OUTSIDE:PLAINTEXT
	listeners = PLAINTEXT://:9092,OUTSIDE://:9094
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data/topics
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = -1
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 2
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 2
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 2
	offsets.topic.replication.factor = 5
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 5000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 3000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 2000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 3000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = 3000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 5000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-10-26 23:12:59,414] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = PLAINTEXT://:9092,OUTSIDE://10.0.2.250:32404
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 5000
	create.topic.policy.class.name = null
	default.replication.factor = 3
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 2000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 0
	host.name = 
	inter.broker.listener.name = PLAINTEXT
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,OUTSIDE:PLAINTEXT
	listeners = PLAINTEXT://:9092,OUTSIDE://:9094
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data/topics
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = -1
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 2
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 2
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 2
	offsets.topic.replication.factor = 5
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 5000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 3000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 2000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 3000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = 3000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 5000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-10-26 23:12:59,449] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-10-26 23:12:59,449] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-10-26 23:12:59,450] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2020-10-26 23:12:59,482] INFO Log directory /var/lib/kafka/data/topics not found, creating it. (kafka.log.LogManager)
[2020-10-26 23:12:59,488] INFO Loading logs. (kafka.log.LogManager)
[2020-10-26 23:12:59,507] INFO Logs loading complete in 19 ms. (kafka.log.LogManager)
[2020-10-26 23:12:59,524] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-10-26 23:12:59,527] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-10-26 23:13:00,016] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2020-10-26 23:13:00,066] INFO [SocketServer brokerId=4] Created data-plane acceptor and processors for endpoint : EndPoint(null,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2020-10-26 23:13:00,089] INFO Awaiting socket connections on 0.0.0.0:9094. (kafka.network.Acceptor)
[2020-10-26 23:13:00,133] INFO [SocketServer brokerId=4] Created data-plane acceptor and processors for endpoint : EndPoint(null,9094,ListenerName(OUTSIDE),PLAINTEXT) (kafka.network.SocketServer)
[2020-10-26 23:13:00,135] INFO [SocketServer brokerId=4] Started 2 acceptor threads for data-plane (kafka.network.SocketServer)
[2020-10-26 23:13:00,169] INFO [ExpirationReaper-4-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,177] INFO [ExpirationReaper-4-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,170] INFO [ExpirationReaper-4-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,177] INFO [ExpirationReaper-4-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,207] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2020-10-26 23:13:00,284] INFO Creating /brokers/ids/4 (is it secure? false) (kafka.zk.KafkaZkClient)
[2020-10-26 23:13:00,314] INFO Stat of the created znode at /brokers/ids/4 is: 4294967371,4294967371,1603753980298,1603753980298,1,0,0,216172912989175811,295,0,4294967371
 (kafka.zk.KafkaZkClient)
[2020-10-26 23:13:00,314] INFO Registered broker 4 at path /brokers/ids/4 with addresses: ArrayBuffer(EndPoint(kafka-4.kafka.kafka.svc.cluster.local,9092,ListenerName(PLAINTEXT),PLAINTEXT), EndPoint(10.0.2.250,32404,ListenerName(OUTSIDE),PLAINTEXT)), czxid (broker epoch): 4294967371 (kafka.zk.KafkaZkClient)
[2020-10-26 23:13:00,397] INFO [ExpirationReaper-4-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,421] INFO [ExpirationReaper-4-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,429] INFO [ExpirationReaper-4-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,453] INFO [GroupCoordinator 4]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2020-10-26 23:13:00,454] INFO [GroupCoordinator 4]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2020-10-26 23:13:00,462] INFO [GroupMetadataManager brokerId=4] Removed 0 expired offsets in 8 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-10-26 23:13:00,486] INFO [ProducerId Manager 4]: Acquired new producerId block (brokerId:4,blockStartProducerId:2000,blockEndProducerId:2999) by writing to Zk with path version 3 (kafka.coordinator.transaction.ProducerIdManager)
[2020-10-26 23:13:00,517] INFO [TransactionCoordinator id=4] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-10-26 23:13:00,519] INFO [Transaction Marker Channel Manager 4]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2020-10-26 23:13:00,520] INFO [TransactionCoordinator id=4] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2020-10-26 23:13:00,550] INFO [ExpirationReaper-4-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-26 23:13:00,584] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2020-10-26 23:13:00,640] INFO [SocketServer brokerId=4] Started data-plane processors for 2 acceptors (kafka.network.SocketServer)
[2020-10-26 23:13:00,646] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2020-10-26 23:13:00,646] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2020-10-26 23:13:00,646] INFO Kafka startTimeMs: 1603753980641 (org.apache.kafka.common.utils.AppInfoParser)
[2020-10-26 23:13:00,648] INFO [KafkaServer id=4] started (kafka.server.KafkaServer)
[2020-10-26 23:15:38,990] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t1_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:39,120] INFO [Log partition=t1_warnings-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:39,126] INFO [Log partition=t1_warnings-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 47 ms (kafka.log.Log)
[2020-10-26 23:15:39,129] INFO Created log for partition t1_warnings-0 in /var/lib/kafka/data/topics/t1_warnings-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:39,131] INFO [Partition t1_warnings-0 broker=4] No checkpointed highwatermark is found for partition t1_warnings-0 (kafka.cluster.Partition)
[2020-10-26 23:15:39,132] INFO [Partition t1_warnings-0 broker=4] Log loaded for partition t1_warnings-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:39,133] INFO [Partition t1_warnings-0 broker=4] t1_warnings-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:15:43,266] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t2_filtered-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:43,287] INFO [Log partition=t2_filtered-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:43,289] INFO [Log partition=t2_filtered-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-10-26 23:15:43,293] INFO Created log for partition t2_filtered-0 in /var/lib/kafka/data/topics/t2_filtered-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:43,295] INFO [Partition t2_filtered-0 broker=4] No checkpointed highwatermark is found for partition t2_filtered-0 (kafka.cluster.Partition)
[2020-10-26 23:15:43,298] INFO [Partition t2_filtered-0 broker=4] Log loaded for partition t2_filtered-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:43,298] INFO [Partition t2_filtered-0 broker=4] t2_filtered-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:15:45,145] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t3_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:45,162] INFO [Log partition=t3_warnings-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:45,162] INFO [Log partition=t3_warnings-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-26 23:15:45,163] INFO Created log for partition t3_warnings-0 in /var/lib/kafka/data/topics/t3_warnings-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:45,164] INFO [Partition t3_warnings-0 broker=4] No checkpointed highwatermark is found for partition t3_warnings-0 (kafka.cluster.Partition)
[2020-10-26 23:15:45,164] INFO [Partition t3_warnings-0 broker=4] Log loaded for partition t3_warnings-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:45,164] INFO [Partition t3_warnings-0 broker=4] t3_warnings-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:15:49,158] INFO [Log partition=t5_warnings-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:49,160] INFO [Log partition=t5_warnings-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2020-10-26 23:15:49,169] INFO Created log for partition t5_warnings-0 in /var/lib/kafka/data/topics/t5_warnings-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:49,171] INFO [Partition t5_warnings-0 broker=4] No checkpointed highwatermark is found for partition t5_warnings-0 (kafka.cluster.Partition)
[2020-10-26 23:15:49,171] INFO [Partition t5_warnings-0 broker=4] Log loaded for partition t5_warnings-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:49,172] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t5_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:49,228] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Starting (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:49,235] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 2 for partitions Map(t5_warnings-0 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:49,239] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Truncating partition t5_warnings-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:49,243] INFO [Log partition=t5_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2020-10-26 23:15:51,147] INFO [Log partition=t6_warnings-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:51,147] INFO [Log partition=t6_warnings-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-26 23:15:51,148] INFO Created log for partition t6_warnings-0 in /var/lib/kafka/data/topics/t6_warnings-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:51,150] INFO [Partition t6_warnings-0 broker=4] No checkpointed highwatermark is found for partition t6_warnings-0 (kafka.cluster.Partition)
[2020-10-26 23:15:51,150] INFO [Partition t6_warnings-0 broker=4] Log loaded for partition t6_warnings-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:51,151] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t6_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:51,164] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t6_warnings-0 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:51,170] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:51,173] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition t6_warnings-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:51,173] INFO [Log partition=t6_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2020-10-26 23:15:52,605] INFO [Log partition=t6_filtered-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:52,605] INFO [Log partition=t6_filtered-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2020-10-26 23:15:52,606] INFO Created log for partition t6_filtered-0 in /var/lib/kafka/data/topics/t6_filtered-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:52,607] INFO [Partition t6_filtered-0 broker=4] No checkpointed highwatermark is found for partition t6_filtered-0 (kafka.cluster.Partition)
[2020-10-26 23:15:52,607] INFO [Partition t6_filtered-0 broker=4] Log loaded for partition t6_filtered-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:52,607] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t6_filtered-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:52,608] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t6_filtered-0 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:52,687] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition t6_filtered-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:52,687] INFO [Log partition=t6_filtered-0, dir=/var/lib/kafka/data/topics] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2020-10-26 23:15:53,215] INFO [Log partition=t7_warnings-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:53,215] INFO [Log partition=t7_warnings-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-26 23:15:53,216] INFO Created log for partition t7_warnings-0 in /var/lib/kafka/data/topics/t7_warnings-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:53,217] INFO [Partition t7_warnings-0 broker=4] No checkpointed highwatermark is found for partition t7_warnings-0 (kafka.cluster.Partition)
[2020-10-26 23:15:53,217] INFO [Partition t7_warnings-0 broker=4] Log loaded for partition t7_warnings-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:53,217] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t7_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:53,223] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t7_warnings-0 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:53,226] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Starting (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:53,232] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Truncating partition t7_warnings-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:15:53,232] INFO [Log partition=t7_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2020-10-26 23:15:54,832] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t7_filtered-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:15:54,840] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:15:54,841] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2020-10-26 23:15:54,841] INFO Created log for partition t7_filtered-0 in /var/lib/kafka/data/topics/t7_filtered-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:15:54,842] INFO [Partition t7_filtered-0 broker=4] No checkpointed highwatermark is found for partition t7_filtered-0 (kafka.cluster.Partition)
[2020-10-26 23:15:54,842] INFO [Partition t7_filtered-0 broker=4] Log loaded for partition t7_filtered-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:15:54,842] INFO [Partition t7_filtered-0 broker=4] t7_filtered-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:16:44,684] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t1-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:16:44,693] INFO [Log partition=t1-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:16:44,693] INFO [Log partition=t1-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-26 23:16:44,695] INFO Created log for partition t1-0 in /var/lib/kafka/data/topics/t1-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:16:44,696] INFO [Partition t1-0 broker=4] No checkpointed highwatermark is found for partition t1-0 (kafka.cluster.Partition)
[2020-10-26 23:16:44,696] INFO [Partition t1-0 broker=4] Log loaded for partition t1-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:16:44,697] INFO [Partition t1-0 broker=4] t1-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:16:47,013] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t2-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:16:47,022] INFO [Log partition=t2-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:16:47,023] INFO [Log partition=t2-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-26 23:16:47,023] INFO Created log for partition t2-0 in /var/lib/kafka/data/topics/t2-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:16:47,024] INFO [Partition t2-0 broker=4] No checkpointed highwatermark is found for partition t2-0 (kafka.cluster.Partition)
[2020-10-26 23:16:47,024] INFO [Partition t2-0 broker=4] Log loaded for partition t2-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:16:47,024] INFO [Partition t2-0 broker=4] t2-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:16:56,655] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t6-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:16:56,687] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:16:56,688] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2020-10-26 23:16:56,689] INFO Created log for partition t6-0 in /var/lib/kafka/data/topics/t6-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:16:56,690] INFO [Partition t6-0 broker=4] No checkpointed highwatermark is found for partition t6-0 (kafka.cluster.Partition)
[2020-10-26 23:16:56,693] INFO [Partition t6-0 broker=4] Log loaded for partition t6-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:16:56,693] INFO [Partition t6-0 broker=4] t6-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2020-10-26 23:16:58,259] INFO [Log partition=t7-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2020-10-26 23:16:58,263] INFO [Log partition=t7-0, dir=/var/lib/kafka/data/topics] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2020-10-26 23:16:58,264] INFO Created log for partition t7-0 in /var/lib/kafka/data/topics/t7-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> -1, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2020-10-26 23:16:58,264] INFO [Partition t7-0 broker=4] No checkpointed highwatermark is found for partition t7-0 (kafka.cluster.Partition)
[2020-10-26 23:16:58,265] INFO [Partition t7-0 broker=4] Log loaded for partition t7-0 with initial high watermark 0 (kafka.cluster.Partition)
[2020-10-26 23:16:58,265] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t7-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:16:58,266] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t7-0 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:16:58,496] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Truncating partition t7-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:16:58,496] INFO [Log partition=t7-0, dir=/var/lib/kafka/data/topics] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2020-10-26 23:18:12,697] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t1-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:18:12,698] INFO [Partition t1-0 broker=4] t1-0 starts at leader epoch 1 from offset 4259 with high watermark 4256. Previous leader epoch was 0. (kafka.cluster.Partition)
[2020-10-26 23:18:13,103] INFO [Partition t1-0 broker=4] Expanding ISR from 4,5 to 4,5,0 (kafka.cluster.Partition)
[2020-10-26 23:18:13,141] INFO [Partition t1-0 broker=4] ISR updated to [4,5,0] and zkVersion updated to [2] (kafka.cluster.Partition)
[2020-10-26 23:23:00,455] INFO [GroupMetadataManager brokerId=4] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-10-26 23:28:14,254] WARN Client session timed out, have not heard from server in 2001ms for sessionid 0x300001e78c80003 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:28:14,255] INFO Client session timed out, have not heard from server in 2001ms for sessionid 0x300001e78c80003, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:28:15,590] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Partition t7_warnings-0 has an older epoch (0) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,591] WARN [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Partition t7_warnings-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,591] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Partition t7-0 has an older epoch (0) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,592] WARN [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=1] Partition t7-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,832] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Partition t6_warnings-0 has an older epoch (0) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,833] WARN [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Partition t6_warnings-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,834] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Partition t6_filtered-0 has an older epoch (0) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:15,834] WARN [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Partition t6_filtered-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:28:16,317] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=1842) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:16,325] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=1842), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:17,691] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4,2. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:28:33,267] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:34,231] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:34,333] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:28:35,333] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:35,340] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:36,440] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:36,601] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:37,701] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:37,783] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:38,883] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:39,810] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:40,911] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:41,629] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:42,730] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:43,381] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:51,334] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:51,335] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:51,335] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:53,336] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:53,337] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:53,338] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:54,484] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:55,335] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:55,339] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:55,380] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:55,380] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:56,435] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:57,033] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:57,381] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:57,381] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:57,381] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:58,134] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:28:58,836] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:28:59,382] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:59,382] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:59,383] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:28:59,937] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:00,330] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:01,431] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:02,416] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:03,517] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:04,007] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:15,114] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:15,811] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:16,912] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:17,462] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:18,563] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:18,880] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:19,981] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:20,836] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:21,397] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:21,397] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:21,397] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:21,936] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:22,379] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:23,398] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:23,398] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:23,398] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:23,479] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:24,346] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:25,399] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:25,399] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:25,400] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:27,400] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:27,401] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:27,401] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:29,402] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:29,402] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:29,402] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:35,457] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:36,224] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:37,325] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:37,838] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:38,939] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:39,311] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:40,411] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:40,697] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:41,798] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:41,807] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:42,908] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:43,692] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:44,793] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:45,682] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:51,415] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:51,416] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:51,416] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:53,417] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:53,417] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:53,417] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:55,424] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:55,425] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:55,425] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:56,790] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:57,246] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:57,426] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:57,426] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:57,426] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:58,347] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:29:58,715] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:29:59,428] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:59,429] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:59,429] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:29:59,815] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:00,190] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:01,296] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:01,318] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:02,419] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:02,582] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:03,683] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:04,488] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:05,589] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:05,808] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:16,923] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:17,344] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:18,445] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:19,037] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:20,137] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:20,731] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:21,448] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:21,449] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:21,449] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:21,831] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:22,127] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:23,227] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:23,449] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:23,450] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:23,450] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:24,030] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:25,131] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:25,451] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:25,452] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:25,452] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:25,965] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:27,453] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:27,453] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:27,453] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:29,454] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:29,454] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:29,454] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:37,097] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:37,691] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:38,792] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:39,644] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:40,745] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:41,446] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:42,547] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:42,967] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:44,067] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:44,242] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:45,342] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:45,885] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:46,986] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:47,863] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:30:51,469] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:51,469] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:51,470] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:53,470] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:53,477] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:53,478] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:55,478] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:55,479] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:55,479] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:57,479] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:57,480] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:57,480] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:58,972] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:30:59,481] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:59,481] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:59,482] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:30:59,846] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:00,947] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:01,320] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:02,424] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:03,409] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:04,510] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:05,424] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:06,524] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:07,077] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:08,177] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:09,150] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:20,257] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:20,972] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:21,498] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:21,498] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:21,498] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:22,073] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:22,195] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:23,296] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:23,499] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:23,499] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:23,500] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:23,708] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:24,809] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:25,500] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:25,501] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:25,501] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:25,511] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:26,611] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:26,638] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:27,501] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:27,502] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:27,502] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:27,738] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:27,819] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:28,919] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:29,385] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:29,503] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:29,503] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:29,503] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:40,494] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:40,584] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:41,685] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:41,986] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:43,087] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:43,713] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:44,814] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:44,860] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:45,961] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:46,470] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:47,571] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:48,421] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:49,521] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:31:50,307] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:31:51,518] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:51,519] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:51,519] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:53,520] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:53,520] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:53,520] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:55,521] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:55,521] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:55,521] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:57,522] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:57,522] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:57,522] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:59,523] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:59,523] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:31:59,524] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:01,428] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:01,883] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:02,984] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:03,264] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:04,365] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:05,039] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:06,139] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:06,701] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:07,801] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:08,028] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:09,128] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:09,579] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:10,679] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:11,018] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:21,542] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:21,542] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:21,543] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:22,126] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:22,800] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:23,543] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:23,543] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:23,544] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:23,900] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:24,047] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:25,147] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:25,431] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:25,545] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:25,545] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:25,545] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:26,531] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:26,922] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:27,546] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:27,546] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:27,546] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:28,023] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:28,775] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:29,547] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:29,547] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:29,547] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:29,876] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:30,424] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:31,524] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:32,361] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:43,472] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:44,388] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:45,488] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:45,571] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:46,671] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:46,851] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:47,951] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:48,441] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:49,541] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:50,429] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:51,529] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:51,565] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:51,565] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:51,565] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:51,815] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:52,915] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:32:52,980] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:32:53,566] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:53,566] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:53,566] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:55,567] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:55,567] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:55,568] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:57,568] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:57,569] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:57,569] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:59,570] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:59,570] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:32:59,570] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:00,454] INFO [GroupMetadataManager brokerId=4] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2020-10-26 23:33:04,323] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:05,044] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:06,144] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:06,934] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:08,034] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:08,879] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:09,980] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:10,338] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:11,439] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:12,397] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:13,499] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:14,139] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:21,589] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:21,589] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:21,589] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.net.SocketTimeoutException: Failed to connect within 3000 ms
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:104)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:23,590] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:23,590] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:23,591] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:25,250] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper: Name or service not known
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:25,586] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:25,591] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:25,591] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:25,591] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:26,687] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:26,830] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:27,592] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:27,592] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:27,593] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:27,931] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:28,282] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:29,383] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:29,597] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error connecting to node kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) (org.apache.kafka.clients.NetworkClient)
java.net.UnknownHostException: kafka-2.kafka.kafka.svc.cluster.local
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:955)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:293)
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:65)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:29,597] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=1895343029, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:29,598] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[0])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=1895343029, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to kafka-2.kafka.kafka.svc.cluster.local:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:103)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:33:29,729] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:30,829] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:31,225] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:31,617] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Partition t5_warnings-0 has an older epoch (0) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:33:31,617] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Partition t5_warnings-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:33:32,326] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:32,762] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:33,863] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:33,894] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:34,995] ERROR Unable to resolve address: zookeeper:2181 (org.apache.zookeeper.client.StaticHostProvider)
java.net.UnknownHostException: zookeeper
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-10-26 23:33:35,023] WARN Session 0x300001e78c80003 for server zookeeper:2181, unexpected error, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
java.lang.IllegalArgumentException: Unable to canonicalize address zookeeper:2181 because it's not resolvable
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:71)
	at org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:39)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1087)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
[2020-10-26 23:33:36,904] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:37,942] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:39,644] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:40,661] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:42,748] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:43,766] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:45,725] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:46,742] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:48,096] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:49,110] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:50,858] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:51,893] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:53,639] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:54,681] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:56,500] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:57,526] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:33:59,583] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:00,598] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:02,047] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:02,053] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:03,689] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:04,725] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:06,514] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:07,541] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:09,873] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:10,902] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:12,136] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:13,173] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:14,433] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:15,445] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:16,814] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:17,845] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:18,970] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:19,990] INFO Socket error occurred: zookeeper/10.233.2.139:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:21,984] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:21,989] INFO Socket connection established, initiating session, client: /10.233.113.3:44440, server: zookeeper/10.233.2.139:2181 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,013] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient.$anonfun$waitUntilConnected$3(ZooKeeperClient.scala:270)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:258)
	at kafka.zookeeper.ZooKeeperClient.$anonfun$waitUntilConnected$1(ZooKeeperClient.scala:252)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:252)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1712)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1682)
	at kafka.zk.KafkaZkClient.retryRequestUntilConnected(KafkaZkClient.scala:1677)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:737)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,013] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,014] WARN Unable to reconnect to ZooKeeper service, session 0x300001e78c80003 has expired (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,014] INFO Unable to reconnect to ZooKeeper service, session 0x300001e78c80003 has expired, closing socket connection (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,014] INFO EventThread shut down for session: 0x300001e78c80003 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,027] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,028] INFO [ZooKeeperClient Kafka server] Session expired. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:34:22,028] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,030] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,031] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,031] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,032] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,032] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,033] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,033] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,034] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,034] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,035] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,038] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,039] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,040] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,040] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,041] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,041] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,042] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,042] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,043] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,043] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,044] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,044] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,044] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,047] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,047] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,048] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,048] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,050] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,050] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,051] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,051] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,051] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,052] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,052] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,052] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,053] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,053] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,054] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,055] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,055] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,055] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,056] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,056] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,057] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,057] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,057] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,058] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,058] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,059] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,059] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,059] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,060] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,060] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,060] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,061] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,061] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,061] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,062] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,062] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,063] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,063] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,063] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,064] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,064] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,064] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,065] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,065] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,066] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,066] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,066] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,066] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,067] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,067] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,068] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,068] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,069] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,069] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,071] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,071] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,071] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,072] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,073] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,073] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,073] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,073] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,074] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,074] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,074] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,074] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,075] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,075] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,075] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,075] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,076] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,076] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,076] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,076] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,081] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,081] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,081] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,082] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,082] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,083] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,084] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,085] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,085] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,085] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,087] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,087] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,088] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,088] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,088] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,088] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,089] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,089] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,089] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,089] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,090] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,090] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,090] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,090] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,091] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,091] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,091] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,091] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,092] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,092] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,092] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,092] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,097] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,098] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2020-10-26 23:34:22,101] ERROR Uncaught exception in scheduled task 'isr-expiration' (kafka.utils.KafkaScheduler)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /brokers/topics/t6/partitions/0/state
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
	at kafka.zookeeper.AsyncResponse.resultException(ZooKeeperClient.scala:557)
	at kafka.zk.KafkaZkClient.conditionalUpdatePath(KafkaZkClient.scala:763)
	at kafka.utils.ReplicationUtils$.updateLeaderAndIsr(ReplicationUtils.scala:34)
	at kafka.cluster.ZkPartitionStateStore.updateIsr(Partition.scala:77)
	at kafka.cluster.ZkPartitionStateStore.shrinkIsr(Partition.scala:62)
	at kafka.cluster.Partition.shrinkIsr(Partition.scala:1188)
	at kafka.cluster.Partition.$anonfun$maybeShrinkIsr$2(Partition.scala:859)
	at kafka.cluster.Partition.maybeShrinkIsr(Partition.scala:841)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$3(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2(ReplicaManager.scala:1537)
	at kafka.server.ReplicaManager.$anonfun$maybeShrinkIsr$2$adapted(ReplicaManager.scala:1536)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.server.ReplicaManager.maybeShrinkIsr(ReplicaManager.scala:1536)
	at kafka.server.ReplicaManager.$anonfun$startup$1(ReplicaManager.scala:305)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
[2020-10-26 23:34:22,101] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,098] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=5000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@a4add54 (org.apache.zookeeper.ZooKeeper)
[2020-10-26 23:34:22,103] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2020-10-26 23:34:22,107] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,114] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,115] INFO Creating /brokers/ids/4 (is it secure? false) (kafka.zk.KafkaZkClient)
[2020-10-26 23:34:22,119] INFO Socket connection established, initiating session, client: /10.233.113.3:44442, server: zookeeper/10.233.2.139:2181 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,156] INFO Session establishment complete on server zookeeper/10.233.2.139:2181, sessionid = 0x200003135e20005, negotiated timeout = 3000 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:34:22,181] INFO Stat of the created znode at /brokers/ids/4 is: 98784247860,98784247860,1603755262163,1603755262163,1,0,0,144115399433256965,295,0,98784247860
 (kafka.zk.KafkaZkClient)
[2020-10-26 23:34:22,181] INFO Registered broker 4 at path /brokers/ids/4 with addresses: ArrayBuffer(EndPoint(kafka-4.kafka.kafka.svc.cluster.local,9092,ListenerName(PLAINTEXT),PLAINTEXT), EndPoint(10.0.2.250,32404,ListenerName(OUTSIDE),PLAINTEXT)), czxid (broker epoch): 98784247860 (kafka.zk.KafkaZkClient)
[2020-10-26 23:34:22,187] INFO [Partition t6-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,187] INFO [Partition t7_filtered-0 broker=4] Shrinking ISR from 4,6,2 to 4. Leader: (highWatermark: 124669, endOffset: 124671). Out of sync replicas: (brokerId: 6, endOffset: 124670) (brokerId: 2, endOffset: 124669). (kafka.cluster.Partition)
[2020-10-26 23:34:22,224] INFO [Partition t7_filtered-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,224] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,258] INFO [Partition t6-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,259] INFO [Partition t7_filtered-0 broker=4] Shrinking ISR from 4,6,2 to 4. Leader: (highWatermark: 124669, endOffset: 124671). Out of sync replicas: (brokerId: 6, endOffset: 124670) (brokerId: 2, endOffset: 124669). (kafka.cluster.Partition)
[2020-10-26 23:34:22,307] INFO [Partition t7_filtered-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,308] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,360] INFO [Partition t6-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,360] INFO [Partition t7_filtered-0 broker=4] Shrinking ISR from 4,6,2 to 4. Leader: (highWatermark: 124669, endOffset: 124671). Out of sync replicas: (brokerId: 6, endOffset: 124670) (brokerId: 2, endOffset: 124669). (kafka.cluster.Partition)
[2020-10-26 23:34:22,400] INFO [Partition t7_filtered-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,401] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,441] INFO [Partition t6-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,442] INFO [Partition t7_filtered-0 broker=4] Shrinking ISR from 4,6,2 to 4. Leader: (highWatermark: 124669, endOffset: 124671). Out of sync replicas: (brokerId: 6, endOffset: 124670) (brokerId: 2, endOffset: 124669). (kafka.cluster.Partition)
[2020-10-26 23:34:22,488] INFO [Partition t7_filtered-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,488] INFO [Partition t6-0 broker=4] Shrinking ISR from 4,2,3 to 4. Leader: (highWatermark: 124352, endOffset: 124355). Out of sync replicas: (brokerId: 2, endOffset: 124354) (brokerId: 3, endOffset: 124352). (kafka.cluster.Partition)
[2020-10-26 23:34:22,536] INFO [Partition t6-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,537] INFO [Partition t7_filtered-0 broker=4] Shrinking ISR from 4,6,2 to 4. Leader: (highWatermark: 124669, endOffset: 124671). Out of sync replicas: (brokerId: 6, endOffset: 124670) (brokerId: 2, endOffset: 124669). (kafka.cluster.Partition)
[2020-10-26 23:34:22,564] INFO [Partition t7_filtered-0 broker=4] Cached zkVersion 0 not equal to that in zookeeper, skip updating ISR (kafka.cluster.Partition)
[2020-10-26 23:34:22,567] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t6-0, t7_warnings-0, t1_warnings-0, t3_warnings-0, t2-0, t7_filtered-0, t2_filtered-0, t5_warnings-0, t6_warnings-0, t7-0, t6_filtered-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,568] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t2_filtered-0 -> (offset=124058, leaderEpoch=2), t6_warnings-0 -> (offset=2424, leaderEpoch=2), t6_filtered-0 -> (offset=124050, leaderEpoch=2)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,581] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 2 for partitions Map(t2-0 -> (offset=124061, leaderEpoch=2), t6-0 -> (offset=124352, leaderEpoch=2)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,586] INFO [Log partition=t6_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 2424 has no effect as the largest offset in the log is 2423 (kafka.log.Log)
[2020-10-26 23:34:22,586] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(t7-0 -> (offset=124884, leaderEpoch=2), t7_warnings-0 -> (offset=2424, leaderEpoch=2)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,586] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 2 for partitions Map(t1_warnings-0 -> (offset=2424, leaderEpoch=2), t7_filtered-0 -> (offset=124669, leaderEpoch=3), t3_warnings-0 -> (offset=2424, leaderEpoch=3), t5_warnings-0 -> (offset=2424, leaderEpoch=1)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,586] INFO [Log partition=t6_filtered-0, dir=/var/lib/kafka/data/topics] Truncating to 124050 has no effect as the largest offset in the log is 124049 (kafka.log.Log)
[2020-10-26 23:34:22,586] INFO [Log partition=t2_filtered-0, dir=/var/lib/kafka/data/topics] Truncating to 124058 has no effect as the largest offset in the log is 124057 (kafka.log.Log)
[2020-10-26 23:34:22,590] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:22,592] INFO [Log partition=t7-0, dir=/var/lib/kafka/data/topics] Truncating to 124886 has no effect as the largest offset in the log is 124885 (kafka.log.Log)
[2020-10-26 23:34:22,592] INFO [Log partition=t7_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 2424 has no effect as the largest offset in the log is 2423 (kafka.log.Log)
[2020-10-26 23:34:22,624] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Truncating to offset 124354 (kafka.log.Log)
[2020-10-26 23:34:22,626] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Scheduling segments for deletion List() (kafka.log.Log)
[2020-10-26 23:34:22,629] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 124354 with message format version 2 (kafka.log.Log)
[2020-10-26 23:34:22,632] INFO [ProducerStateManager partition=t6-0] Writing producer snapshot at offset 124354 (kafka.log.ProducerStateManager)
[2020-10-26 23:34:22,650] INFO [Log partition=t2-0, dir=/var/lib/kafka/data/topics] Truncating to 124061 has no effect as the largest offset in the log is 124060 (kafka.log.Log)
[2020-10-26 23:34:22,762] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t1-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,766] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 5 for partitions Map(t1-0 -> (offset=123598, leaderEpoch=5)) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:22,782] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Starting (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:22,801] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Retrying leaderEpoch request for partition t1-0 as the leader reported an error: UNKNOWN_LEADER_EPOCH (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:22,805] INFO [Log partition=t3_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 2424 has no effect as the largest offset in the log is 2423 (kafka.log.Log)
[2020-10-26 23:34:22,806] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Truncating to offset 124670 (kafka.log.Log)
[2020-10-26 23:34:22,806] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Scheduling segments for deletion List() (kafka.log.Log)
[2020-10-26 23:34:22,806] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Loading producer state till offset 124670 with message format version 2 (kafka.log.Log)
[2020-10-26 23:34:22,807] INFO [ProducerStateManager partition=t7_filtered-0] Writing producer snapshot at offset 124670 (kafka.log.ProducerStateManager)
[2020-10-26 23:34:22,818] INFO [Log partition=t5_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 2424 has no effect as the largest offset in the log is 2423 (kafka.log.Log)
[2020-10-26 23:34:22,818] INFO [Log partition=t1_warnings-0, dir=/var/lib/kafka/data/topics] Truncating to 2424 has no effect as the largest offset in the log is 2423 (kafka.log.Log)
[2020-10-26 23:34:23,811] INFO [Log partition=t1-0, dir=/var/lib/kafka/data/topics] Truncating to 123598 has no effect as the largest offset in the log is 123597 (kafka.log.Log)
[2020-10-26 23:34:24,606] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Error sending fetch request (sessionId=INVALID, epoch=INITIAL) to node 1: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:34:24,606] WARN [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t6_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[2]), t2_filtered-0=(fetchOffset=124058, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[2]), t6_filtered-0=(fetchOffset=124050, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[2])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=INVALID, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:34:24,840] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error sending fetch request (sessionId=INVALID, epoch=INITIAL) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:34:24,843] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=1] Error in response for fetch request (type=FetchRequest, replicaId=4, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={t5_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[1]), t7_filtered-0=(fetchOffset=124670, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[3]), t3_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[3]), t1_warnings-0=(fetchOffset=2424, logStartOffset=0, maxBytes=1048576, currentLeaderEpoch=Optional[2])}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=INVALID, epoch=INITIAL), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-10-26 23:34:27,411] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Partition t2-0 has an older epoch (2) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,412] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Partition t2-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,412] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Partition t6-0 has an older epoch (2) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,413] WARN [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Partition t6-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,414] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Partition t1-0 has an older epoch (5) than the current leader. Will await the new LeaderAndIsr state before resuming fetching. (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,415] WARN [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Partition t1-0 marked as failed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,465] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t6-0, t2-0, t1-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:34:27,466] INFO [Partition t6-0 broker=4] t6-0 starts at leader epoch 3 from offset 199593 with high watermark 199585. Previous leader epoch was 2. (kafka.cluster.Partition)
[2020-10-26 23:34:27,468] INFO [Partition t2-0 broker=4] t2-0 starts at leader epoch 3 from offset 199758 with high watermark 199750. Previous leader epoch was 2. (kafka.cluster.Partition)
[2020-10-26 23:34:27,470] INFO [Partition t1-0 broker=4] t1-0 starts at leader epoch 6 from offset 199500 with high watermark 199500. Previous leader epoch was 5. (kafka.cluster.Partition)
[2020-10-26 23:34:27,472] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Shutting down (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,475] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Stopped (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,476] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Shutdown completed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,483] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Shutting down (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,488] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Stopped (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:34:27,488] INFO [ReplicaFetcher replicaId=4, leaderId=5, fetcherId=1] Shutdown completed (kafka.server.ReplicaFetcherThread)
[2020-10-26 23:35:17,806] INFO Unable to read additional data from server sessionid 0x200003135e20005, likely server has closed socket, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:19,862] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:19,867] INFO Socket connection established, initiating session, client: /10.233.113.3:44870, server: zookeeper/10.233.2.139:2181 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:19,881] INFO Session establishment complete on server zookeeper/10.233.2.139:2181, sessionid = 0x200003135e20005, negotiated timeout = 3000 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:22,627] INFO [Log partition=t6-0, dir=/var/lib/kafka/data/topics] Deleting segments List() (kafka.log.Log)
[2020-10-26 23:35:22,806] INFO [Log partition=t7_filtered-0, dir=/var/lib/kafka/data/topics] Deleting segments List() (kafka.log.Log)
[2020-10-26 23:35:52,595] INFO Unable to read additional data from server sessionid 0x200003135e20005, likely server has closed socket, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:54,643] INFO Opening socket connection to server zookeeper/10.233.2.139:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:54,648] INFO Socket connection established, initiating session, client: /10.233.113.3:45116, server: zookeeper/10.233.2.139:2181 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:54,657] INFO Session establishment complete on server zookeeper/10.233.2.139:2181, sessionid = 0x200003135e20005, negotiated timeout = 3000 (org.apache.zookeeper.ClientCnxn)
[2020-10-26 23:35:56,242] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t1-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:35:56,243] INFO [Partition t1-0 broker=4] t1-0 starts at leader epoch 7 from offset 217275 with high watermark 217275. Previous leader epoch was 6. (kafka.cluster.Partition)
[2020-10-26 23:35:56,298] INFO [Partition t1-0 broker=4] Expanding ISR from 0,4 to 0,4,5 (kafka.cluster.Partition)
[2020-10-26 23:35:56,313] INFO [Partition t1-0 broker=4] ISR updated to [0,4,5] and zkVersion updated to [11] (kafka.cluster.Partition)
[2020-10-26 23:36:00,512] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions Set(t2_filtered-0, t7_filtered-0, t3_warnings-0, t1_warnings-0) (kafka.server.ReplicaFetcherManager)
[2020-10-26 23:36:00,512] INFO [Partition t2_filtered-0 broker=4] t2_filtered-0 starts at leader epoch 3 from offset 217849 with high watermark 217849. Previous leader epoch was 2. (kafka.cluster.Partition)
[2020-10-26 23:36:00,514] INFO [Partition t7_filtered-0 broker=4] t7_filtered-0 starts at leader epoch 4 from offset 217849 with high watermark 217849. Previous leader epoch was 3. (kafka.cluster.Partition)
[2020-10-26 23:36:00,516] INFO [Partition t3_warnings-0 broker=4] t3_warnings-0 starts at leader epoch 4 from offset 4343 with high watermark 4343. Previous leader epoch was 3. (kafka.cluster.Partition)
[2020-10-26 23:36:00,518] INFO [Partition t1_warnings-0 broker=4] t1_warnings-0 starts at leader epoch 3 from offset 4343 with high watermark 4343. Previous leader epoch was 2. (kafka.cluster.Partition)
